# -*- coding: utf-8 -*-
"""UTS no 4 Ilham Bagus.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bXuZyM5b2aqh9RYn5_cqMihl3-_gOvPt
"""

import numpy as np
import matplotlib.pyplot as plt
from math import e #Untuk memanggil bilangan eksponen natural (e)

# Mendefinisikan fungsi
def f(x):
  return sin(1) / x

# Sesi Input Nilai Awal yang dikonversi ke pecahan
x0 = float(input('x0: '))
x1 = float(input('x1: '))
eps = float(input('epsilon : '))

# Metode Regulafalsi
def regulafalse(x0,x1,eps):
    step = 1
    print('\n\n** ---MOTODE REGULAFALSI--- **')
    condition=True
    while condition:
      x2=x1-(f(x1)*(x1-x0)/(f(x1)-f(x0)))
      print('Iterasi-%d, x2 = %0.6f dan f(x2) = %0.6f' % (step, x2, f(x2)))
      if f(x0) * f(x2) < 0:
          x1 = x2
      else:
          x0 = x2
      step = step +1
      condition = abs(f(x2)) > eps

    print('\n Akar Persamaan tersebut : %0.8f' % x2)

# Menggambar fungsi
rr = np.linspace(0.5, 1, 100) #masukan nilai tebakan awal
plt.plot(rr, f(rr))
plt.show()
plt.savefig("fungsi.png") #untuk menyimpan gambar fungsi

# Pengecekan nilai awal
if f(x0) * f(x1) > 0.0:
    print('Nilai yang diprediksi tidak mengurung akar')
    print('Silahkan mencoba ulang prediksi nilai baru')
else:
    regulafalse (x0,x1,eps)